class Solution {
private:
    void combination(string digit,string output, int index ,vector<string>& ans,string arr[])
    {
        // base condtion if the index cross the digit length than add that sting in vector and return 
        if(index>=digit.length())
        {
            ans.push_back(output);
            return;
        }
        
        // here find the number that occure in digit string at index place
        int num=digit[index]-'0';
        
        // here find find tha corelated with that number
        string value=arr[num];
        
        
        for(int i=0;i<value.length();i++)
        {
            output.push_back(value[i]);
            combination(digit,output,index+1,ans,arr);
            output.pop_back();
        }
        
        
        
    }
public:
    vector<string> letterCombinations(string digits) {
        vector<string>ans;
        
        if(digits.length()==0)
        {
            return ans;
        }
        string output;
        int index=0;
        string arr[10]={"","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
        
        combination(digits,output,index,ans,arr);
        return ans;
        
    }
};
